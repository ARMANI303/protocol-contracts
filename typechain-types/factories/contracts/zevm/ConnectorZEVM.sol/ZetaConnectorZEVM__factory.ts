/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZetaConnectorZEVM,
  ZetaConnectorZEVMInterface,
} from "../../../../contracts/zevm/ConnectorZEVM.sol/ZetaConnectorZEVM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wzeta",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedZetaSent",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFungibleModule",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWZETA",
    type: "error",
  },
  {
    inputs: [],
    name: "WZETATransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "wzeta_",
        type: "address",
      },
    ],
    name: "SetWZETA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sourceTxOriginAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "zetaTxSenderAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eventNonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "destinationAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zetaValueAndGas",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationGasLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "zetaParams",
        type: "bytes",
      },
    ],
    name: "ZetaSent",
    type: "event",
  },
  {
    inputs: [],
    name: "FUNGIBLE_MODULE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "destinationAddress",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "destinationGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "zetaValueAndGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "zetaParams",
            type: "bytes",
          },
        ],
        internalType: "struct ZetaInterfaces.SendInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wzeta_",
        type: "address",
      },
    ],
    name: "setWzetaAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wzeta",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zetaSentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b2d380380610b2d8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b610a16806101176000396000f3fe60806040526004361061004d5760003560e01c8062173d46146100de5780633ce4a5bc146101095780636f254b1914610134578063eb3bacbd1461015f578063ec02690114610188576100d9565b366100d95760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d7576040517f6e6b6de700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b3480156100ea57600080fd5b506100f36101b1565b604051610100919061073b565b60405180910390f35b34801561011557600080fd5b5061011e6101d5565b60405161012b919061073b565b60405180910390f35b34801561014057600080fd5b506101496101ed565b6040516101569190610817565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190610615565b6101f3565b005b34801561019457600080fd5b506101af60048036038101906101aa919061066f565b6102e6565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73735b14bb79463307aacbed86daf3322b1e6226ab81565b60015481565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026c576040517fea02b3f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7325870b05f8f3412c318a35fc6a74feca51ea15811ec7a257676ca4db9d4176816040516102db919061073b565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084608001356040518463ffffffff1660e01b815260040161034793929190610756565b602060405180830381600087803b15801561036157600080fd5b505af1158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610642565b6103cf576040517fa8c6fd4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d82608001356040518263ffffffff1660e01b815260040161042c9190610817565b600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b50505050600073735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff16826080013560405161049c90610726565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610519576040517fc7ffc47b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000815461052890610908565b9190508190555081600001353373ffffffffffffffffffffffffffffffffffffffff167f3a5e775d23ccbb143b663302281541003214b93742c3a704474fa64e5292e319326001548680602001906105809190610832565b886080013589604001358a806060019061059a9190610832565b8c8060a001906105aa9190610832565b6040516105c09a9998979695949392919061078d565b60405180910390a35050565b6000813590506105db816109b2565b92915050565b6000815190506105f0816109c9565b92915050565b600060c0828403121561060c5761060b610985565b5b81905092915050565b60006020828403121561062b5761062a610999565b5b6000610639848285016105cc565b91505092915050565b60006020828403121561065857610657610999565b5b6000610666848285016105e1565b91505092915050565b60006020828403121561068557610684610999565b5b600082013567ffffffffffffffff8111156106a3576106a2610994565b5b6106af848285016105f6565b91505092915050565b6106c1816108b1565b82525050565b60006106d38385610895565b93506106e08385846108f9565b6106e98361099e565b840190509392505050565b60006107016000836108a6565b915061070c826109af565b600082019050919050565b610720816108ef565b82525050565b6000610731826106f4565b9150819050919050565b600060208201905061075060008301846106b8565b92915050565b600060608201905061076b60008301866106b8565b61077860208301856106b8565b6107856040830184610717565b949350505050565b600060e0820190506107a2600083018d6106b8565b6107af602083018c610717565b81810360408301526107c2818a8c6106c7565b90506107d16060830189610717565b6107de6080830188610717565b81810360a08301526107f18186886106c7565b905081810360c08301526108068184866106c7565b90509b9a5050505050505050505050565b600060208201905061082c6000830184610717565b92915050565b6000808335600160200384360303811261084f5761084e61098a565b5b80840192508235915067ffffffffffffffff82111561087157610870610980565b5b60208301925060018202360383131561088d5761088c61098f565b5b509250929050565b600082825260208201905092915050565b600081905092915050565b60006108bc826108cf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000610913826108ef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561094657610945610951565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b6109bb816108b1565b81146109c657600080fd5b50565b6109d2816108c3565b81146109dd57600080fd5b5056fea26469706673582212207eb0b46b004cec67fd1ac3d7d6151765a1b1302a84ac3dd15df2dfb3e619870f64736f6c63430008070033";

type ZetaConnectorZEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZetaConnectorZEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZetaConnectorZEVM__factory extends ContractFactory {
  constructor(...args: ZetaConnectorZEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wzeta: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZetaConnectorZEVM> {
    return super.deploy(_wzeta, overrides || {}) as Promise<ZetaConnectorZEVM>;
  }
  override getDeployTransaction(
    _wzeta: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wzeta, overrides || {});
  }
  override attach(address: string): ZetaConnectorZEVM {
    return super.attach(address) as ZetaConnectorZEVM;
  }
  override connect(signer: Signer): ZetaConnectorZEVM__factory {
    return super.connect(signer) as ZetaConnectorZEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZetaConnectorZEVMInterface {
    return new utils.Interface(_abi) as ZetaConnectorZEVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZetaConnectorZEVM {
    return new Contract(address, _abi, signerOrProvider) as ZetaConnectorZEVM;
  }
}
